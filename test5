#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
//int main()
//{
//	int a = 9 / 2;
//	float a = 9 / 2.0;
//	int a = 9 % 2;//% - 取余
//}

//int main()
//{
//	int a = 2;
//	int b = a << 1;//左移操作符 -- 移动的是二进制位
//
//	printf("%d\n", b);
//	return 0;
//}

//位操作符  &按位与  |按位货   ^按位异或
//单目操作符
//int main()
/*{
	int a = 2;*/
	//a = a + 5;
	//a = 6;
	//a += 5;

	//a = a - 3;
	//a -= 3;

	//a = a % 3;
	//return 0;
//}

//
//int main()
//{
//	//0 表示假，非0就是真
//	int a = 10;
//	printf("%d\n", !a);
//
//	if (a)
//	{
//		//如果a为真，执行
//	}
//	if (!a)
//	{
//		//如果a为假，执行
//	}
//	a = -5;
//	a = -a;
//	a = +a;
//	return 0;
//}

//int main()
//{
//	//sizeof 是一个操作符  计算类型或者变量的大小
//	//不是函数
//	int a = 10;
//	printf("%d\n",sizeof(a));
//	printf("%d\n", sizeof(int));
//	
//	return 0;
//
//}

//int main()
//{
//	int arr[10] = { 0 };
//	printf("%d\n", sizeof(arr));//计算的是数组的总大小，单位是字节
//	printf("%d\n", sizeof(arr[0]));
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	printf("%d\n", sz);
//	return 0;
//}
//
//int main()
//{
//	int a = 0;
//	printf("%d\n", ~a);//按位(二进制位)取反:把所有二进制位中数字，1变成0,0变成1
//	                   //整数在内存中存储的是补码
//	                   //一个整数的二进制表示有三种：原码 反码 补码
//	                   
//	
//	return 0;
//}


//int main()
//{
//	int a = 10;
//	int b = ++a;//前置++
//	printf("%d\n", b);//11
//	printf("%d\n", a);//11
//
//	int c= 10;
//	int d = c++;
//	printf("%d\n", d);//10
//	printf("%d\n", c);//11
//
//	return 0;
//}

//int main()
//{
//	int a = (int)3.14;//强制类型转换
//
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	int a = 3;
//	int b = 5;
//	int c = a && b;
//	printf("%d\n",c);
//
//	int a = 3;
//	int b = 5;
//	int c = a || b;
//	printf("%d\n",c);
//	if (a && b)
//	{
//
//	}
// return 0;
//}

//int main()
//{
//	条件操作符（三目操作符）exp1?  exp2:exp3
//	exp1 成立，exp2计算，整个表达式的结构是：exp2的结果
//	exp1 不成立，exp2计算，整个表达式的结构是：exp3的结果
//
//	int a = 0;
//	int b = 3;
//	int max = 0;
//	if (a > b)
//	{
//		max = a;
//	}
//	else
//	{
//		max = b;
//	}
//
//	max = a > b ? a : b;
//	printf("%d\n", max);
//	return 0;
//}


//int main()
//{
//	//逗号表达式：逗号隔开的一串表达式
//	//(2, 4 + 5, 6);
//	int a = 0;
//	int b = 3;
//	int c = 5;
//	int d = (a = b + 2, c = a - 4, b = c + 2);
//	//逗号表达式，是从左向右依次计算的   整个表达式的结果是左后一个表达式的结果
//	printf("%d\n", d);
//	return 0;
//}


//int main()
//{
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	printf("%d\n", arr[5]);//[]下标引用操作符
//	return 0;
//
//}

//函数调用操作符
int main()
{
	//调用函数的时候，函数名后面的（）就是函数调用操作符
	printf("hehe\n");
	printf("%d\n", 100);
	return 0;

}
